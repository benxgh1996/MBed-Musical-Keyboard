#include "mbed.h"
#include "Speaker.h"
#include "PinDetect.h"

double vol = 0.01;

DigitalOut myled1(LED1);
DigitalOut myled2(LED2);
DigitalOut myled3(LED3);
DigitalOut myled4(LED4);

PinDetect pb1(p22); //you can use different pins
PinDetect pb2(p24); //you can use different pins
PinDetect pb3(p21); // you can use different pins
PinDetect pb4(p23); //you can use different pins
PinDetect pb5(p26); //you can use different pins
PinDetect pb6(p20); // you can use different pins
PinDetect pb7(p29); //you can use different pins
PinDetect pb8(p30); //you can use different pins

// setup instance of new Speaker class, mySpeaker using pin 21
// the pin must be a PWM output pin
Speaker mySpeaker(p25);
//---------------------------------------------------------------------------------------------------
// Callback routine is interrupt activated by a debounced pb1 hit
// That is … this code runs with interrupt is generated by first button press
void pb1_hit_callback (void)
{ myled1 = !myled1;
mySpeaker.PlayNote(262.0,0.2,vol);
}
//---------------------------------------------------------------------------------------------------
// Callback routine is interrupt activated by a debounced pb2 hit
// That is … this code runs with interrupt is generated by second button press
void pb2_hit_callback (void)
{ myled2 = !myled2;
mySpeaker.PlayNote(294.0,0.2,vol);
}
//---------------------------------------------------------------------------------------------------
// Callback routine is interrupt activated by a debounced pb3 hit
// That is … this code runs with interrupt is generated by third button press
void pb3_hit_callback (void)
{ myled3 = !myled3;
mySpeaker.PlayNote(330.0,0.2,vol);
}
// Callback routine is interrupt activated by a debounced pb1 hit
// That is … this code runs with interrupt is generated by first button press
void pb4_hit_callback (void)
{ myled1 = !myled1;
mySpeaker.PlayNote(349.0,0.2,vol);
}
//---------------------------------------------------------------------------------------------------
// Callback routine is interrupt activated by a debounced pb2 hit
// That is … this code runs with interrupt is generated by second button press
void pb5_hit_callback (void)
{ myled2 = !myled2;
mySpeaker.PlayNote(392.0,0.2,vol);
}
//---------------------------------------------------------------------------------------------------
// Callback routine is interrupt activated by a debounced pb3 hit
// That is … this code runs with interrupt is generated by third button press
void pb6_hit_callback (void)
{ myled3 = !myled3;
mySpeaker.PlayNote(440.0,0.2,vol);
}
// Callback routine is interrupt activated by a debounced pb3 hit
// That is … this code runs with interrupt is generated by third button press
void pb7_hit_callback (void)
{ myled3 = !myled1;
mySpeaker.PlayNote(494.0,0.2,vol);
}
// Callback routine is interrupt activated by a debounced pb3 hit
// That is … this code runs with interrupt is generated by third button press
void pb8_hit_callback (void)
{ myled3 = !myled2;
mySpeaker.PlayNote(523.0,0.2,vol);
}
//---------------------------------------------------------------------------------------------------
int main()
{
//setup push buttons
pb1.mode(PullUp);
pb2.mode(PullUp);
pb3.mode(PullUp);
pb4.mode(PullUp);
pb5.mode(PullUp);
pb6.mode(PullUp);
pb7.mode(PullUp);
pb8.mode(PullUp);

// Delay for initial pullup to take effect
wait(.01);
// Setup Interrupt callback functions for a pb hit
pb1.attach_deasserted(&pb1_hit_callback);
pb2.attach_deasserted(&pb2_hit_callback);
pb3.attach_deasserted(&pb3_hit_callback);
pb4.attach_deasserted(&pb4_hit_callback);
pb5.attach_deasserted(&pb5_hit_callback);
pb6.attach_deasserted(&pb6_hit_callback);
pb7.attach_deasserted(&pb7_hit_callback);
pb8.attach_deasserted(&pb8_hit_callback);
// Start sampling pb inputs using interrupts
pb1.setSampleFrequency();
pb2.setSampleFrequency();
pb3.setSampleFrequency();
pb4.setSampleFrequency();
pb5.setSampleFrequency();
pb6.setSampleFrequency();
pb7.setSampleFrequency();
pb8.setSampleFrequency();
// pushbuttons now setup and running
while(1)
{
myled4 = !myled4;
wait(0.5);
}
} //end main